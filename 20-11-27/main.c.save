#include <stdio.h>
#include<stdlib.h>
//int main()
//{
//    int*arr[10];//指针数组
//    int*(*p)[10]=&arr;//数组指针
//    int(*pp)(int,int)=Add;//函数指针
//    int(*pp[10])(int,int)={Add};/
//    pp(a,b);
//    return 0;
//}
//int compare(const void*e1,const void*e2)
//{
//     return *((int*)e1)-*((int*)e2);
//}
//int main()
//{
//    int arr[10]={9,8,7,6,5,4,3,2,1,0};
////    bubble_sort(arr,sz);
//    int sz=sizeof(arr)/sizeof(arr[0]);
//    int (*p)(const void*,const void*)=compare;
//    qsort(arr,sz,sizeof(arr[0]),p);
//    int i;
//    for(i=0;i<sz;i++)
//    {
//        printf("%d ",arr[i]);
//    }
//    return 0;
//}
void swap(char*buf1,char*buf2,int width)
{
    int i;
    for(i=0;i<width;i++)
    {
        char temp=*buf1;
        *buf1=*buf2;
        *buf2=temp;
        buf1++;
        buf2++;
    }
}
void bubble_sort(void* base,int sz,int width,int(*cmp)(const void*,const void*))
{
    int i;
    for(i=0;i<sz;i++)
    {
        int j;
        for(j=0;j<sz;j++)
        {

            if(cmp((char*)base+j*width,(char*)base+(j+1)*width)>0)
        {
            swap((char*)base+j*width,(char*)base+(j+1)*width,width);
        }
        }
    }
}
typedef struct S
{
    char name[20];
    int age;
}SS;
int cmp(const void* a,const void* b )
{
    return *(int*)a-*(int*)b;
nt cmpp(const void* a,const void* b)
{
    return (int)((SS*)a)->age-((SS*)b)->age;
}
void test2()
{
        SS s[3]={{"lihua",19},{"dawei",20},{"bobo",21}};

    int sz =sizeof(s)/sizeof(s[0]);


    bubble_sort(s,sz,sizeof(s[0]),cmpp);
}
void test1()
{
    int arr[10]={10,9,,8,5,6,7,8,9,10};
    int sz=sizeof(arr)/sizeof(arr[0]);
    bubble_sort(arr,sz,sizeof(arr[0]),cmp);
        for(int i=0;i<sz;i++)
    {
        printf("%d ",arr[i]);
    }
}
int main()
{


    test1();
    test2();

    return 0;
}
